{"version":3,"sources":["components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry..js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","className","alt","src","id","CardList","robots","cardsArray","map","user","i","SearchBox","searchfield","searchChange","type","placehorlder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onClickTextChange","h1","onSearchChange","event","target","value","revert","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAeeA,EAbF,SAACC,GACV,IAAOC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACb,OACI,sBAAMC,UAAY,sDAAlB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAAMM,GAAhC,cACrB,gCACI,6BAAKL,IACL,4BAAIC,WCULK,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEVC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OACA,cAAC,EAAD,CAEIN,GAAIE,EAAOI,GAAGN,GACdL,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZS,EAAKL,OAMlB,OAAQ,8BACHG,KCAMI,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKZ,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVa,KAAO,SACPC,aAAa,gBACbC,SAAUH,OCCHI,G,MARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,mBAAoBC,OAAQ,SAAtE,SACCvB,EAAMwB,aCkBAC,E,kDApBX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG/B,WACI,OAAIG,KAAKJ,MAAMC,SACH,4DAEJG,KAAK9B,MAAMwB,a,GAhBCQ,aCwDZC,E,kDAjDX,aAAe,IAAD,8BACV,gBAcJC,kBAAoB,WAChB,EAAKH,SAAS,CAACI,GAAG,mCAhBR,EAkBdC,eAAiB,SAACC,GACd,EAAKN,SAAS,CAACjB,YAAYuB,EAAMC,OAAOC,SAnB9B,EAqBdC,OAAO,WACH,EAAKT,SAAS,CAACI,GAAG,MApBlB,EAAKT,MAAQ,CACTlB,OAAQ,GACRM,YAAa,GACbqB,GAAI,IALE,E,qDASd,WAAqB,IAAD,OAChBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAEzBF,MAAK,SAAAG,GAAK,OAAI,EAAKd,SAAS,CAACvB,OAAQqC,S,oBAY1C,WACI,MAAgCf,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACVgC,EAAgBtC,EAAOuC,QAAO,SAAAvC,GAChC,OAAOA,EAAOP,KAAK+C,cAAcC,SAASnC,EAAYkC,kBAE1D,OAAQxC,EAAO0C,OAGX,sBAAK/C,UAAU,MAAf,UACI,oBAAIgD,QAASrB,KAAKI,kBAAlB,yBACA,6BAAKJ,KAAKJ,MAAMS,KAChB,wBAAQgB,QAASrB,KAAKU,OAAQlC,GAAG,MAAjC,oBACA,cAAC,EAAD,CAAWS,aAAce,KAAKM,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQsC,WAT9B,+C,GAhCMd,aCIHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.c858c86b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {name, email } = props;\r\n    return (\r\n        <div  className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200*200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    \r\n    const cardsArray = robots.map((user,i) => {\r\n        return (\r\n        <Card \r\n            key={user.id}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}            \r\n        />)\r\n    })\r\n    return (<div>\r\n        {cardsArray}\r\n    </div>)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n        <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type = 'search' \r\n        placehorlder='search robots'\r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '5px dashed black', height: '800px'}}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n   render() {\r\n       if (this.state.hasError) {\r\n            return <h1> Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children \r\n        }\r\n    \r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport errorBoundry from '../components/ErrorBoundry.'\r\nimport ErrorBoundry from '../components/ErrorBoundry.';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n            h1: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        \r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n    onClickTextChange = () => {\r\n        this.setState({h1:\"These are your robot friends!\"});\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value});\r\n    }\r\n    revert=()=>{\r\n        this.setState({h1:\"\"});\r\n    }\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots =robots.filter(robots =>{\r\n            return(robots.name.toLowerCase().includes(searchfield.toLowerCase()));\r\n        })\r\n        return !robots.length ? \r\n            <h1>Loading..</h1> :\r\n        (\r\n            <div className='tc '>\r\n                <h1 onClick={this.onClickTextChange}>RoboFriends</h1>\r\n                <h1>{this.state.h1}</h1>\r\n                <button onClick={this.revert} id='btn'>revert</button>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport CardList from './components/CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots'\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}